
spring.application.name=get-started-camel

server.port=8090

#logging.level.root=WARN
#logging.level.org.springframework=DEBUG
#***********************************************
#log4j.rootLogger=INFO, out

#log4j.logger.org.apache.camel=DEBUG


log4j.appender.out=org.apache.log4j.ConsoleAppender
log4j.appender.out.layout=org.apache.log4j.PatternLayout
log4j.appender.out.layout.ConversionPattern=[%30.30t] %-30.30c{1} %-5p %m%n
#log4j.appender.out.layout.ConversionPattern=%d [%-15.15t] %-5p %-30.30c{1} - %m%n

############### Data Source configuration##################### 
# Postgres sql
# JDBC URL of the database.
spring.datasource.url=jdbc:postgresql://localhost:5432/POC_SCHEMA
spring.datasource.username=POC_ADMIN
spring.datasource.password=login@123
spring.datasource.driver-class-name=org.postgresql.Driver


############### Hibernate Properties     #####################
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".
#VALUES -> create, create-drop,update,validate,none
spring.jpa.hibernate.ddl-auto=update
# Whether to enable logging of SQL statements.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.current_session_context_class=thread
# Fix Postgres JPA Error (Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented).
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate additional native properties to set on the JPA provider.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

###############HikariCP Configurations##########################
#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout =30000
 #minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=10
#maximum pool size
spring.datasource.hikari.maximum-pool-size=10
#maximum idle time for connection
spring.datasource.hikari.idle-timeout=10000
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.max-lifetime=0
#default auto-commit behavior.
spring.datasource.hikari.auto-commit =true